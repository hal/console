{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECeA,KAAK,aAAa,CAAC,kBAEnB,KAAK,gBAAgB,CAAC,UAAW,SAAU,CAAC,EACxC,IAAI,EAAK,IAAI,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACpC,EAAG,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EACrB,IAAI,CAAC,SAAU,CAAG,EAEf,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAG,EAAI,IAAI,CAC/B,EAAG,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,EACjB,IAAI,CAAC,SAAU,CAAQ,EACpB,KAAK,UAAY,EAAE,IAAI,CAAC,QAAQ,CAAG,EAAS,EAAE,CAClD,GACC,KAAK,CAAC,SAAU,CAAK,EAClB,EAAM,iBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAG,KAAO,EAC5E,EACR,GACC,KAAK,CAAC,WAEH,EAAG,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,EACjB,IAAI,CAAC,SAAU,CAAQ,EACpB,KAAK,UAAY,EAAE,IAAI,CAAC,QAAQ,CAAG,EAAS,EAAE,CAClD,GACC,KAAK,CAAC,SAAU,CAAK,EAClB,EAAM,iBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAG,KAAO,EAC5E,EACR,EACR,EAAG,CAAA,GAEH,KAAK,IAAI,CAAG,SAAU,CAAO,EAEzB,QAAQ,IAAI,CAAC,YAAc,mDAAqD,EACpF,EAEA,KAAK,KAAK,CAAG,SAAU,CAAO,EAE1B,QAAQ,KAAK,CAAC,YAAc,mDAAqD,EACrF,EAEA,KAAK,SAAS,CAAG,WACb,IAAI,EAAI,IAAI,KACZ,OAAO,EAAE,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAAO,IAC9C,EAAE,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAAO,IAC7C,EAAE,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAAO,IAC7C,EAAE,eAAe,GAAG,QAAQ,GAAG,QAAQ,CAAC,EAAG,IACnD,C,G,E,Q","sources":["<anon>","src/web/script/worker.js"],"sourcesContent":["(function () {\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire25b9\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire25b9\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"3RGmS\", function(module, exports) {\n/*\n *  Copyright 2022 Red Hat\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */ self.importScripts(\"pouchdb.min.js\");\nself.addEventListener(\"message\", function(e) {\n    let db = new PouchDB(e.data.database);\n    db.get(e.data.document._id).then(function(doc) {\n        // update existing document\n        e.data.document._rev = doc._rev;\n        db.put(e.data.document).then(function(response) {\n            info(\"Update \" + e.data.database + response.id);\n        }).catch(function(error) {\n            error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n        });\n    }).catch(function() {\n        // put new document\n        db.put(e.data.document).then(function(response) {\n            info(\"Insert \" + e.data.database + response.id);\n        }).catch(function(error) {\n            error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n        });\n    });\n}, false);\nself.info = function(message) {\n    // use the same log format as HAL\n    console.info(timestamp() + \" INFO  worker.js                                \" + message);\n};\nself.error = function(message) {\n    // use the same log format as HAL\n    console.error(timestamp() + \" ERROR worker.js                                \" + message);\n};\nself.timestamp = function() {\n    let d = new Date();\n    return d.getHours().toString().padStart(2, \"0\") + \":\" + d.getMinutes().toString().padStart(2, \"0\") + \":\" + d.getSeconds().toString().padStart(2, \"0\") + \".\" + d.getMilliseconds().toString().padStart(3, \"0\");\n};\n\n});\n\n\nparcelRequire(\"3RGmS\");\n})();\n//# sourceMappingURL=worker.354be649.js.map\n","/*\n *  Copyright 2022 Red Hat\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nself.importScripts(\"pouchdb.min.js\");\n\nself.addEventListener(\"message\", function (e) {\n    let db = new PouchDB(e.data.database);\n    db.get(e.data.document._id)\n        .then(function (doc) {\n            // update existing document\n            e.data.document._rev = doc._rev;\n            db.put(e.data.document)\n                .then(function (response) {\n                    info(\"Update \" + e.data.database + response.id);\n                })\n                .catch(function (error) {\n                    error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n                });\n        })\n        .catch(function () {\n            // put new document\n            db.put(e.data.document)\n                .then(function (response) {\n                    info(\"Insert \" + e.data.database + response.id);\n                })\n                .catch(function (error) {\n                    error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n                });\n        });\n}, false);\n\nself.info = function (message) {\n    // use the same log format as HAL\n    console.info(timestamp() + \" INFO  worker.js                                \" + message);\n};\n\nself.error = function (message) {\n    // use the same log format as HAL\n    console.error(timestamp() + \" ERROR worker.js                                \" + message);\n};\n\nself.timestamp = function () {\n    let d = new Date();\n    return d.getHours().toString().padStart(2, \"0\") + \":\" +\n        d.getMinutes().toString().padStart(2, \"0\") + \":\" +\n        d.getSeconds().toString().padStart(2, \"0\") + \".\" +\n        d.getMilliseconds().toString().padStart(3, \"0\");\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","importScripts","addEventListener","e","db","PouchDB","data","database","get","document","_id","then","doc","_rev","put","response","info","catch","error","message","console","timestamp","d","Date","getHours","toString","padStart","getMinutes","getSeconds","getMilliseconds"],"version":3,"file":"worker.354be649.js.map"}