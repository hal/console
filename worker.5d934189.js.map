{"mappings":"ACeA,KAAK,cAAc,kBAEnB,KAAK,iBAAiB,UAAW,SAAU,CAAC,EACxC,IAAI,EAAK,IAAI,QAAQ,EAAE,KAAK,UAC5B,EAAG,IAAI,EAAE,KAAK,SAAS,KAClB,KAAK,SAAU,CAAG,EAEf,EAAE,KAAK,SAAS,KAAO,EAAI,KAC3B,EAAG,IAAI,EAAE,KAAK,UACT,KAAK,SAAU,CAAQ,EACpB,KAAK,UAAY,EAAE,KAAK,SAAW,EAAS,GAChD,GACC,MAAM,SAAU,CAAK,EAClB,EAAM,iBAAmB,EAAE,KAAK,SAAW,EAAE,KAAK,SAAS,IAAM,KAAO,EAC5E,EACR,GACC,MAAM,WAEH,EAAG,IAAI,EAAE,KAAK,UACT,KAAK,SAAU,CAAQ,EACpB,KAAK,UAAY,EAAE,KAAK,SAAW,EAAS,GAChD,GACC,MAAM,SAAU,CAAK,EAClB,EAAM,iBAAmB,EAAE,KAAK,SAAW,EAAE,KAAK,SAAS,IAAM,KAAO,EAC5E,EACR,EACR,EAAG,CAAA,GAEH,KAAK,KAAO,SAAU,CAAO,EAEzB,QAAQ,KAAK,YAAc,mDAAqD,EACpF,EAEA,KAAK,MAAQ,SAAU,CAAO,EAE1B,QAAQ,MAAM,YAAc,mDAAqD,EACrF,EAEA,KAAK,UAAY,WACb,IAAI,EAAI,IAAI,KACZ,OAAO,EAAE,WAAW,WAAW,SAAS,EAAG,KAAO,IAC9C,EAAE,aAAa,WAAW,SAAS,EAAG,KAAO,IAC7C,EAAE,aAAa,WAAW,SAAS,EAAG,KAAO,IAC7C,EAAE,kBAAkB,WAAW,SAAS,EAAG,IACnD","sources":["<anon>","src/web/script/worker.js"],"sourcesContent":["(function () {\nvar $2d072fbcc83fdf12$exports = {};\n/*\n *  Copyright 2022 Red Hat\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */ self.importScripts(\"pouchdb.min.js\");\nself.addEventListener(\"message\", function(e) {\n    let db = new PouchDB(e.data.database);\n    db.get(e.data.document._id).then(function(doc) {\n        // update existing document\n        e.data.document._rev = doc._rev;\n        db.put(e.data.document).then(function(response) {\n            info(\"Update \" + e.data.database + response.id);\n        }).catch(function(error) {\n            error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n        });\n    }).catch(function() {\n        // put new document\n        db.put(e.data.document).then(function(response) {\n            info(\"Insert \" + e.data.database + response.id);\n        }).catch(function(error) {\n            error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n        });\n    });\n}, false);\nself.info = function(message) {\n    // use the same log format as HAL\n    console.info(timestamp() + \" INFO  worker.js                                \" + message);\n};\nself.error = function(message) {\n    // use the same log format as HAL\n    console.error(timestamp() + \" ERROR worker.js                                \" + message);\n};\nself.timestamp = function() {\n    let d = new Date();\n    return d.getHours().toString().padStart(2, \"0\") + \":\" + d.getMinutes().toString().padStart(2, \"0\") + \":\" + d.getSeconds().toString().padStart(2, \"0\") + \".\" + d.getMilliseconds().toString().padStart(3, \"0\");\n};\n\n})();\n//# sourceMappingURL=worker.5d934189.js.map\n","/*\n *  Copyright 2022 Red Hat\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nself.importScripts(\"pouchdb.min.js\");\n\nself.addEventListener(\"message\", function (e) {\n    let db = new PouchDB(e.data.database);\n    db.get(e.data.document._id)\n        .then(function (doc) {\n            // update existing document\n            e.data.document._rev = doc._rev;\n            db.put(e.data.document)\n                .then(function (response) {\n                    info(\"Update \" + e.data.database + response.id);\n                })\n                .catch(function (error) {\n                    error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n                });\n        })\n        .catch(function () {\n            // put new document\n            db.put(e.data.document)\n                .then(function (response) {\n                    info(\"Insert \" + e.data.database + response.id);\n                })\n                .catch(function (error) {\n                    error(\"Unable to put \" + e.data.database + e.data.document._id + \": \" + error);\n                });\n        });\n}, false);\n\nself.info = function (message) {\n    // use the same log format as HAL\n    console.info(timestamp() + \" INFO  worker.js                                \" + message);\n};\n\nself.error = function (message) {\n    // use the same log format as HAL\n    console.error(timestamp() + \" ERROR worker.js                                \" + message);\n};\n\nself.timestamp = function () {\n    let d = new Date();\n    return d.getHours().toString().padStart(2, \"0\") + \":\" +\n        d.getMinutes().toString().padStart(2, \"0\") + \":\" +\n        d.getSeconds().toString().padStart(2, \"0\") + \".\" +\n        d.getMilliseconds().toString().padStart(3, \"0\");\n}\n"],"names":["self","importScripts","addEventListener","e","db","PouchDB","data","database","get","document","_id","then","doc","_rev","put","response","info","id","catch","error","message","console","timestamp","d","Date","getHours","toString","padStart","getMinutes","getSeconds","getMilliseconds"],"version":3,"file":"worker.5d934189.js.map"}